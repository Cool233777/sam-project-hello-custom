AWSTemplateFormatVersion: '2010-09-09'


Parameters:
  GitProviderType:
    Type: String
    Default: "GitHub"
  MainGitBranch:
    Type: String
    Default: "main"
  SamTemplate:
    Type: String
    Default: "template.yaml"
  TestingRegion:
    Type: String
    Default: "us-east-1"
  TestingStackName:
    Type: String
    Default: "sam-app-hello-custom"
  FeatureGitBranch:
    Type: String
    Default: "main"
  CodeStarConnectionArn:
    Type: String
    Default: ""
  TestingImageRepository:
    Type: String
    Default: ""
  # TestingPipelineExecutionRole:
  #   Type: String
  #   Default: "arn:aws:iam::038462753284:role/aws-sam-cli-managed-dev-pipel-PipelineExecutionRole-kjUnsYW3lwU5"
  # TestingCloudFormationExecutionRole:
  #   Type: String
  #   Default: "arn:aws:iam::038462753284:role/aws-sam-cli-managed-dev-p-CloudFormationExecutionRo-49OvZBvH2N7s"
  # TestingArtifactBucket:
  #   Type: String
  #   Default: "aws-sam-cli-managed-dev-pipeline-r-artifactsbucket-rqd3axx84w38"
  
Resources:
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: "MyGitHubPipeline"
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: sam-app-hello-custom-artifacts
      RestartExecutionOnUpdate: true
      Stages:
        - Name: Source
          Actions:
            - Name: GitHubSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: "1"
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Owner: "Cool233777"
                Repo: "sam-project-hello-custom"
                Branch: "main"
                OAuthToken: "{{resolve:secretsmanager:TokenDeMiGit}}"
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Build and deploy
          Actions:
            - Name: CodeBuild 
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              InputArtifacts:
                - Name: SourceOutput
              # OutputArtifacts:
              #   - Name: packaged-template.yaml
              Configuration:
                ProjectName: !Ref CodeBuildProject
              RunOrder: 1

        # - Name: Deploy
        #   Actions:
        #     - Name: CodeDeploy
        #       ActionTypeId:
        #         Category: Build
        #         Owner: AWS
        #         Provider: CodeBuild
        #         Version: "1"
        #       InputArtifacts:
        #         - Name: BuildOutput
        #       Configuration:
        #         ProjectName: !Ref CodeBuildProjectDeploy
        #         EnvironmentVariables: !Sub |
        #           [
        #             {"name": "ENV_TEMPLATE", "value": "packaged-test.yaml"},
        #             {"name": "ENV_REGION", "value": "${TestingRegion}"},
        #             {"name": "ENV_STACK_NAME", "value": "${TestingStackName}"},
        #             {"name": "ENV_PIPELINE_EXECUTION_ROLE", "value": "${TestingPipelineExecutionRole}"},
        #             {"name": "ENV_CLOUDFORMATION_EXECUTION_ROLE", "value": "${TestingCloudFormationExecutionRole}"},
        #             {"name": "ENV_BUCKET", "value": "${TestingArtifactBucket}"}
        #           ]
        #       RunOrder: 1


  CodePipelineRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: CodePipelineExecutionRole
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service: 
                  - codepipeline.amazonaws.com
              Action: 
                - "sts:AssumeRole"
        Policies:
          - PolicyName: CodePipelinePolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - "s3:GetObject"
                    - "s3:PutObject"
                    - "s3:ListBucket"
                  Resource: 
                    - "arn:aws:s3:::sam-app-hello-custom-artifacts"
                    - "arn:aws:s3:::sam-app-hello-custom-artifacts/*"
                - Effect: Allow
                  Action:
                    - "codebuild:StartBuild"
                    - "codebuild:BatchGetBuilds"
                  Resource: "*"
                - Effect: Allow
                  Action:
                    - "iam:PassRole"
                  Resource: "*"

  TestingArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: sam-app-hello-custom-artifacts-test

  TestingPipelineExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: MyPipelineExecutionRoleCustom
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - "sts:AssumeRole"

  TestingCloudFormationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: MyCloudFormationExecutionRoleCustom
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action:
              - "sts:AssumeRole"



  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: "sam-app-hello-custom-build"
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/amazonlinux2-x86_64-standard:3.0"
        Type: LINUX_CONTAINER
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: STACK_NAME
            Value: "sam-app-hello-custom-stack"
          - Name: TESTING_REGION
            Value: "us-east-1"
          - Name: TESTING_ARTIFACT_BUCKET
            Value: "sam-app-hello-custom-artifacts-test"
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yml

  CodeBuildProjectDeploy:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec_deploy.yml

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CodeBuildExecutionRole-Custom
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:PutObject"
                  - "s3:GetBucketLocation"
                Resource: !Sub "arn:aws:s3:::sam-app-hello-custom-artifacts/*"
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "codebuild:StartBuild"
                  - "codebuild:BatchGetBuilds"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "cloudformation:CreateChangeSet"
                  - "cloudformation:DescribeChangeSet"
                  - "cloudformation:ExecuteChangeSet"
                  - "cloudformation:DescribeStacks"
                Resource: "*"

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Tags:
        - Key: Role
          Value: sam-app-hello-custom-service-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
      Policies:
        - PolicyName: CodeBuildLogs
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*"
        - PolicyName: CodeBuildArtifactsBucket
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:PutObject"
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::${PipelineArtifactsBucket}/*"
        - PolicyName: AssumeStagePipExecutionRoles
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - sts:AssumeRole
                Effect: Allow
                Resource: "*"
                Condition:
                  StringEquals:
                    aws:ResourceTag/Role: pipeline-execution-role

  PipelineArtifactsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      VersioningConfiguration:
        Status: Enabled
      LoggingConfiguration:
        DestinationBucketName:
          !Ref PipelineArtifactsLoggingBucket
        LogFilePrefix: "artifacts-logs"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  PipelineArtifactsLoggingBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      AccessControl: "LogDeliveryWrite"
      OwnershipControls:
        Rules:
          - ObjectOwnership:  ObjectWriter
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
